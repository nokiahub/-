#include <iostream>
//문제 조건중 최대 s개니까 0~s 개까지 써도 된다.(반드시 s개 안써도 됌)
//int a = int(0.5 + (double)5/2); -> 3
//int a = int(0.5 + 5/2); -> 2

#include <algorithm>
#include <vector>
#include <cstring>
#define A_S 100
#define S_S 11
#define INF 987654321
using namespace std;

int arr[A_S+1], sum[A_S+1], psum[A_S+1];
int n , s, memo[A_S+1][S_S];

void precalc(){
    sum[1] = arr[1]; psum[1] = arr[1]*arr[1];
    for(int i = 2 ; i<=n ; i++){
        sum[i] = sum[i-1] + arr[i];
        psum[i] = psum[i-1] + arr[i]*arr[i];
    }
    return;
}


int minDiff(int a, int b){
    int su = sum[b] - (a==1 ? 0 : sum[a-1]);
    int sqsu = psum[b]  - (a==1 ? 0 : psum[a-1]);
    int m = int(0.5 + (double)su / (b-a+1));
    return sqsu - 2*m*su +m*m*(b-a+1);
}

int solve(int index, int k){
    if(index == n+1){
        return 0;
    }
    if(k == 0) return INF;
    int &ret = memo[index][k];
    if(ret != -1) return ret;
    
    ret = INF;
    for(int i = index ; i<=n ; i++){
        ret = min(ret, solve(i+1, k-1) + minDiff(index, i));
    }
    return ret;
}

int main(){
    int c;
    cin >> c;
    while(c--){
        cin >> n >> s;
        for(int i = 1 ; i<=n ; i++) cin >> arr[i];
        sort(arr+1, arr+n+1);
        precalc();
        memset(memo, -1, sizeof(memo));
        int answer  = solve(1, s);
        cout << answer <<'\n';
    }
    return 0;
}
